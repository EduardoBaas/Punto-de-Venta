<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE9GNnFZUD7vTUY5KAAA
        AAAAAAAAT0Y2cVlQPu9NRjkoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQRzdwWVA96U5I
        NCcAAAAAAAAAAFBHN3BZUD3pTkg0JwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIlgBLiJYA5IiW
        AP+IlgD/iJYA/4iWAP+IlgD/iJYA/4eWAFUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiJcA44mW
        AKqHlgBVh5YAVYeWAFWHlgBVh5YAVYeWAFWJkgAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIiW
        AP+HlwCCh5YARIeWAESHlgBEh5YARIeWAESHlgBEgJ8ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACIlgD/iJYA/4iWAP+IlgD/iJYA/4iWAP+IlgD/iJYA/4iWAHoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAiJYA/4iVAMgAAAAAAAAAAAAAAAAAAAAAAAAAAIiWAIuIlgDmgKoABgAAAAAAAAAAAAAAAAAA
        AAAAAAAAhZsAF4iWAP2IlQBnAAAAAAAAAABLw4urScSNOAAAAACImQAeiJYA+4mXAFsAAAAAAAAAAAAA
        AAAAAAAAAAAAAIiXAGmIlgD1i4sAC0m/iRxLw4pVSsOL/0vCio5JxI04AAAAAIiWAKeIlgDJAAAAAAAA
        AAAAAAAAAAAAAAAAAACIlgC9iJUAqQAAAABLw4pVSsOL/0rDi/9Kw4v/S8OLqwAAAACGlAA3iJYA/4qW
        AD8AAAAAAAAAAGdzAEWGkgBUiJYA/IeXAFEAAAAAAAAAAAAAAABKw4v/S8OKVQAAAAAAAAAAAAAAAIiV
        AJiJlgB5AAAAAAAAAABfbADhf40A/YiWALmAqgAGAAAAAAAAAAAAAAAAS8OKVUm/iRwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA/e8AAP3vAAD4DwAA8/8AAPP/AADwDwAA8+cAAPd3
        AAD3MwAA5hsAAO97AACP/wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        H8fg/x//wP8//8H/////////////////////////
</value>
  </data>
</root>